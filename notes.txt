Useful links:

https://www.gabrielgambetta.com/computer-graphics-from-scratch/07-filled-triangles.html
https://en.wikipedia.org/wiki/Sutherland%E2%80%93Hodgman_algorithm
https://wiki.specnext.dev/Palettes#:~:text=Palette%20Visuals,form%20of%20approximation%20or%20scaling.

Snippets: - 16 bit compare

0000   21 D2 04               LD   HL,1234   
0003   11 D3 04               LD   DE,1235   
0006   B7                     OR   A   
0007   ED 52                  SBC   HL,DE   
0009   19                     ADD   HL,DE   
000A   38 02                  JR   C,L1   ; C IF DE > HL
000C   00                     NOP      
000D   C9                     RET      
000E   00           L1:       NOP      
000F   C9                     RET      

Start of lineT

lineT:		LD H,shapeT_X1 >> 8	; Default to drawing in this table
			LD A,D				; Check whether we are going to be drawing up
			CP B
			JR NC, lineT_1
			INC H				; If we're drawing up, then draw in second table
			PUSH BC				; And use this neat trick to swaps BC and DE
			PUSH DE				; using the stack, forcing the line to be always
			POP BC				; drawn downwards
			POP DE

Known issues:

Maybe change lineT so that it draws from HL to DE, not BC to DE to make it similar to lineL2
Difficulty: it uses HL to track the table position of the pixel

; Draw a line into the shape table
; Assume the line is always being drawn downwards
; A = table (0 or 1)
; B = Y pixel position 1
; C = X pixel position 1
; D = Y pixel position 2
; E = X pixel position 2
;
lineT:			ADD A,shapeT_X1 >> 8		; Select the correct table
...